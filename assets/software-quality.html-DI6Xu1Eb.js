import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,f as o,o as r}from"./app-utPN4a2m.js";const n={};function p(s,e){return r(),a("div",null,e[0]||(e[0]=[o('<p>下面推荐都是我看过并且我觉得值得推荐的书籍。</p><p>不过，这些书籍都比较偏理论，只能帮助你建立一个写优秀代码的意识标准。 如果你想要编写更高质量的代码、更高质量的软件，还是应该多去看优秀的源码，多去学习优秀的代码实践。</p><h2 id="代码整洁之道" tabindex="-1"><a class="header-anchor" href="#代码整洁之道"><span>代码整洁之道</span></a></h2><p><strong><a href="https://book.douban.com/subject/30468597/" target="_blank" rel="noopener noreferrer">《重构》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/20210328174841577.png" alt=""></p><p>必看书籍！无需多言。编程书籍领域的瑰宝。</p><p>世界顶级、国宝级别的 Martin Fowler 的书籍，可以说是软件开发领域最经典的几本书之一。目前已经出了第二版。</p><p>这是一本值得你看很多遍的书籍。</p><p><strong><a href="https://book.douban.com/subject/4199741/" target="_blank" rel="noopener noreferrer">《Clean Code》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/20210328174824891.png" alt=""></p><p>《Clean Code》是 Bob 大叔的一本经典著作，强烈建议小伙伴们一定要看看。</p><p>Bob 大叔将自己对整洁代码的理解浓缩在了这本书中，真可谓是对后生的一大馈赠。</p><p><strong><a href="https://book.douban.com/subject/30412517/" target="_blank" rel="noopener noreferrer">《Effective Java 》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/82d510c951384383b325080428af6c0a.png" alt=""></p><p>《Effective Java 》这本书是 Java 领域国宝级别的书，非常经典。Java 程序员必看！</p><p>这本书主要介绍了在 Java 编程中很多极具实用价值的经验规则，这些经验规则涵盖了大多数开发人员每天所面临的问题的解决方案。这篇文章能够非常实际地帮助你写出更加清晰、健壮和高效的代码。本书中的每条规则都以简短、独立的小文章形式出现，并通过例子代码加以进一步说明。</p><p><strong><a href="https://book.douban.com/subject/1477390/" target="_blank" rel="noopener noreferrer">《代码大全》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/20210314173253221.png" alt=""></p><p>其实，《代码大全（第 2 版）》这本书我本身是不太想推荐给大家了。但是，看在它的豆瓣评分这么高的份上，还是拿出来说说吧！</p><p>这也是一本非常经典的书籍，第二版对第一版进行了重写。</p><p>我简单地浏览过全书的内容，感觉内容总体比较虚，对于大部分程序员的作用其实不大。如果你想要切实地提高自己的代码质量，《Clean Code》和 《编写可读代码的艺术》我觉得都要比《代码大全》这本书更好。</p><p>不过，最重要的还是要多看优秀的源码，多学习优秀的代码实践。</p><p><strong><a href="https://book.douban.com/subject/10797189/" target="_blank" rel="noopener noreferrer">《编写可读代码的艺术》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/20210314175536443.png" alt=""></p><p>《编写可读代码的艺术》这本书要表达的意思和《Clean Code》很像，你看它俩的目录就可以看出来了。</p><p><img src="https://oss.javaguide.cn/github/javaguide/books/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0MzM3Mjcy,size_16,color_FFFFFF,t_70-20230309230739963.png" alt=""></p><p>在我看来，如果你看过 《Clean Code》 的话，就不需要再看这本书了。当然，如果你有时间和精力，也可以快速过一遍。</p><p>另外，我这里还要推荐一个叫做 <strong><a href="https://github.com/biezhi/write-readable-code" target="_blank" rel="noopener noreferrer">write-readable-code</a></strong> 的仓库。这个仓库的作者免费分享了一系列基于《编写可读代码的艺术》这本书的视频。这一系列视频会基于 Java 语言来教你如何优化咱们的代码。</p><p>在实践中学习的效果肯定会更好！推荐小伙伴们都抓紧学起来啊！</p><p><img src="https://oss.javaguide.cn/github/javaguide/books/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0MzM3Mjcy,size_16,color_FFFFFF,t_70-20230309230743258.png" alt=""></p><h2 id="程序员职业素养" tabindex="-1"><a class="header-anchor" href="#程序员职业素养"><span>程序员职业素养</span></a></h2><p><strong><a href="https://book.douban.com/subject/26919457/" target="_blank" rel="noopener noreferrer">《The Clean Coder》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/20210314191210273.png" alt=""></p><p>《 The Clean Coder》是 Bob 大叔的又一经典著作。</p><p>《Clean Code》和《 The Clean Coder》这两本书在国内都翻译为 《代码整洁之道》，我觉得这个翻译还是不够优雅的。</p><p>另外，两者的内容差异也很大。《Clean Code》这本书从代码层面来讲解如何提高自己的代码质量。而《The Clean Coder》这本书则是从如何成为一名更优秀的开发者的角度来写的，比如这书会教你如何在自己的领域更专业、如何说不、如何做时间管理、如何处理压力等等。</p><h2 id="架构整洁之道" tabindex="-1"><a class="header-anchor" href="#架构整洁之道"><span>架构整洁之道</span></a></h2><p><strong><a href="https://book.douban.com/subject/30333919/" target="_blank" rel="noopener noreferrer">《架构整洁之道》</a></strong></p><p><img src="https://oss.javaguide.cn/github/javaguide/books/2021031412342771.png" alt=""></p><p>你没看错，《架构整洁之道》这本书又是 Bob 大叔的经典之作。</p><p>这本书我强烈安利！认真读完之后，我保证你对编程本质、编程语言的本质、软件设计、架构设计可以有进一步的认识。</p><p>国内的很多书籍和专栏都借鉴了《架构整洁之道》 这本书。毫不夸张地说，《架构整洁之道》就是架构领域最经典的书籍之一。</p><p>正如作者说的那样：</p><blockquote><p>如果深入研究计算机编程的本质，我们就会发现这 50 年来，计算机编程基本没有什么大的变化。编程语言稍微进步了一点，工具的质量大大提升了，但是计算机程序的基本构造没有什么变化。</p><p>虽然我们有了新的编程语言、新的编程框架、新的编程范式，但是软件架构的规则仍然和 1946 年阿兰·图灵写下第一行机器代码的时候一样。</p><p>这本书就是为了把这些永恒不变的软件架构规则展现出来。</p></blockquote><h2 id="项目管理" tabindex="-1"><a class="header-anchor" href="#项目管理"><span>项目管理</span></a></h2><p><strong><a href="https://book.douban.com/subject/1102259/" target="_blank" rel="noopener noreferrer">《人月神话》</a></strong></p><p><img src="https://oss.javaguide.cn/2021/03/8ece325c-4491-4ffd-9d3d-77e95159ec40.png" alt=""></p><p>这本书主要描述了软件开发的基本定律：<strong>一个需要 10 天才能干完的活，不可能让 10 个人在 1 天干完！</strong></p><p>看书名的第一眼，感觉不像是技术类的书籍。但是，就是这样一个看似和编程不沾边的书名，却成了编程领域长久相传的经典。</p><p><strong>这本书对于现代软件尤其是复杂软件的开发的规范化有深刻的意义。</strong></p><p><strong><a href="https://book.douban.com/subject/5344973/" target="_blank" rel="noopener noreferrer">《领域驱动设计:软件核心复杂性应对之道》</a></strong></p><p><img src="https://oss.javaguide.cn/2021/03/7e80418d-20b1-4066-b9af-cfe434b1bf1a.png" alt=""></p><p>这本领域驱动设计方面的经典之作一直被各种推荐，但是我还来及读。</p><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><ul><li><a href="https://book.douban.com/subject/24536403/" target="_blank" rel="noopener noreferrer">《代码的未来》</a>：这本书的作者是 Ruby 之父松本行弘，算是一本年代比较久远的书籍（13 年出版），不过，还是非常值得一读。这本书的内容主要介绍是编程/编程语言的本质。我个人还是比较喜欢松本行弘的文字风格，并且，你看他的文章也确实能够有所收获。</li><li><a href="https://book.douban.com/subject/1488876/" target="_blank" rel="noopener noreferrer">《深入浅出设计模式》</a>：比较有趣的风格，适合设计模式入门。</li><li><a href="https://book.douban.com/subject/30443578/" target="_blank" rel="noopener noreferrer">《软件架构设计:大型网站技术架构与业务架构融合之道》</a>：内容非常全面。适合面试前突击一些比较重要的理论知识，也适合拿来扩充/完善自己的技术广度。</li><li><a href="https://book.douban.com/subject/33425123/" target="_blank" rel="noopener noreferrer">《微服务架构设计模式》</a>：这本书是世界十大软件架构师之一、微服务架构先驱 Chris Richardson 亲笔撰写，豆瓣评分 9.6。示例代码使用 Java 语言和 Spring 框架。帮助你设计、实现、测试和部署基于微服务的应用程序。</li></ul><p>最后再推荐两个相关的文档：</p><ul><li><strong>阿里巴巴 Java 开发手册</strong>：<a href="https://github.com/alibaba/p3c" target="_blank" rel="noopener noreferrer">https://github.com/alibaba/p3c</a></li><li><strong>Google Java 编程风格指南</strong>：<a href="http://www.hawstein.com/posts/google-java-style.html" target="_blank" rel="noopener noreferrer">http://www.hawstein.com/posts/google-java-style.html</a></li></ul>',57)]))}const c=t(n,[["render",p],["__file","software-quality.html.vue"]]),l=JSON.parse('{"path":"/books/software-quality.html","title":"软件质量必读经典书籍","lang":"zh-CN","frontmatter":{"title":"软件质量必读经典书籍","category":"计算机书籍","icon":"highavailable","head":[["meta",{"name":"keywords","content":"软件质量书籍精选"}],["meta",{"property":"og:url","content":"https://javaguide.cn/books/software-quality.html"}],["meta",{"property":"og:site_name","content":"JavaGuide"}],["meta",{"property":"og:title","content":"软件质量必读经典书籍"}],["meta",{"property":"og:description","content":"下面推荐都是我看过并且我觉得值得推荐的书籍。 不过，这些书籍都比较偏理论，只能帮助你建立一个写优秀代码的意识标准。 如果你想要编写更高质量的代码、更高质量的软件，还是应该多去看优秀的源码，多去学习优秀的代码实践。 代码整洁之道 《重构》 必看书籍！无需多言。编程书籍领域的瑰宝。 世界顶级、国宝级别的 Martin Fowler 的书籍，可以说是软件开发..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://oss.javaguide.cn/github/javaguide/books/20210328174841577.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-05T04:39:01.000Z"}],["meta",{"property":"article:modified_time","content":"2023-05-05T04:39:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"软件质量必读经典书籍\\",\\"image\\":[\\"https://oss.javaguide.cn/github/javaguide/books/20210328174841577.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/20210328174824891.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/82d510c951384383b325080428af6c0a.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/20210314173253221.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/20210314175536443.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0MzM3Mjcy,size_16,color_FFFFFF,t_70-20230309230739963.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM0MzM3Mjcy,size_16,color_FFFFFF,t_70-20230309230743258.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/20210314191210273.png\\",\\"https://oss.javaguide.cn/github/javaguide/books/2021031412342771.png\\",\\"https://oss.javaguide.cn/2021/03/8ece325c-4491-4ffd-9d3d-77e95159ec40.png\\",\\"https://oss.javaguide.cn/2021/03/7e80418d-20b1-4066-b9af-cfe434b1bf1a.png\\"],\\"dateModified\\":\\"2023-05-05T04:39:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]],"description":"下面推荐都是我看过并且我觉得值得推荐的书籍。 不过，这些书籍都比较偏理论，只能帮助你建立一个写优秀代码的意识标准。 如果你想要编写更高质量的代码、更高质量的软件，还是应该多去看优秀的源码，多去学习优秀的代码实践。 代码整洁之道 《重构》 必看书籍！无需多言。编程书籍领域的瑰宝。 世界顶级、国宝级别的 Martin Fowler 的书籍，可以说是软件开发..."},"headers":[{"level":2,"title":"代码整洁之道","slug":"代码整洁之道","link":"#代码整洁之道","children":[]},{"level":2,"title":"程序员职业素养","slug":"程序员职业素养","link":"#程序员职业素养","children":[]},{"level":2,"title":"架构整洁之道","slug":"架构整洁之道","link":"#架构整洁之道","children":[]},{"level":2,"title":"项目管理","slug":"项目管理","link":"#项目管理","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"git":{"createdTime":1649492350000,"updatedTime":1683261541000,"contributors":[{"name":"guide","username":"guide","email":"koushuangbwcx@163.com","commits":5,"url":"https://github.com/guide"},{"name":"Guide","username":"Guide","email":"koushuangbwcx@163.com","commits":2,"url":"https://github.com/Guide"},{"name":"Mr.Hope","username":"Mr.Hope","email":"mister-hope@outlook.com","commits":4,"url":"https://github.com/Mr.Hope"}]},"readingTime":{"minutes":6.01,"words":1803},"filePathRelative":"books/software-quality.md","localizedDate":"2022年4月9日","excerpt":"<p>下面推荐都是我看过并且我觉得值得推荐的书籍。</p>\\n<p>不过，这些书籍都比较偏理论，只能帮助你建立一个写优秀代码的意识标准。 如果你想要编写更高质量的代码、更高质量的软件，还是应该多去看优秀的源码，多去学习优秀的代码实践。</p>\\n<h2>代码整洁之道</h2>\\n<p><strong><a href=\\"https://book.douban.com/subject/30468597/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">《重构》</a></strong></p>\\n<p><img src=\\"https://oss.javaguide.cn/github/javaguide/books/20210328174841577.png\\" alt=\\"\\"></p>","autoDesc":true}');export{c as comp,l as data};
