import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as i,o as n}from"./app-DIPkjwKa.js";const t={};function s(r,e){return n(),l("div",null,e[0]||(e[0]=[i('<p>性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？了解性能测试的指标、分类以及工具等知识有助于我们更好地去写出性能更好的程序，另外作为开发这个角色，如果你会性能测试的话，相信也会为你的履历加分不少。</p><p>这篇文章是我会结合自己的实际经历以及在测试这里取的经所得，除此之外，我还借鉴了一些优秀书籍，希望对你有帮助。</p><h2 id="不同角色看网站性能" tabindex="-1"><a class="header-anchor" href="#不同角色看网站性能"><span>不同角色看网站性能</span></a></h2><h3 id="用户" tabindex="-1"><a class="header-anchor" href="#用户"><span>用户</span></a></h3><p>当用户打开一个网站的时候，最关注的是什么？当然是网站响应速度的快慢。比如我们点击了淘宝的主页，淘宝需要多久将首页的内容呈现在我的面前，我点击了提交订单按钮需要多久返回结果等等。</p><p>所以，用户在体验我们系统的时候往往根据你的响应速度的快慢来评判你的网站的性能。</p><h3 id="开发人员" tabindex="-1"><a class="header-anchor" href="#开发人员"><span>开发人员</span></a></h3><p>用户与开发人员都关注速度，这个速度实际上就是我们的系统<strong>处理用户请求的速度</strong>。</p><p>开发人员一般情况下很难直观的去评判自己网站的性能，我们往往会根据网站当前的架构以及基础设施情况给一个大概的值,比如：</p><ol><li>项目架构是分布式的吗？</li><li>用到了缓存和消息队列没有？</li><li>高并发的业务有没有特殊处理？</li><li>数据库设计是否合理？</li><li>系统用到的算法是否还需要优化？</li><li>系统是否存在内存泄露的问题？</li><li>项目使用的 Redis 缓存多大？服务器性能如何？用的是机械硬盘还是固态硬盘？</li><li>……</li></ol><h3 id="测试人员" tabindex="-1"><a class="header-anchor" href="#测试人员"><span>测试人员</span></a></h3><p>测试人员一般会根据性能测试工具来测试，然后一般会做出一个表格。这个表格可能会涵盖下面这些重要的内容：</p><ol><li>响应时间；</li><li>请求成功率；</li><li>吞吐量；</li><li>……</li></ol><h3 id="运维人员" tabindex="-1"><a class="header-anchor" href="#运维人员"><span>运维人员</span></a></h3><p>运维人员会倾向于根据基础设施和资源的利用率来判断网站的性能，比如我们的服务器资源使用是否合理、数据库资源是否存在滥用的情况、当然，这是传统的运维人员，现在 Devops 火起来后，单纯干运维的很少了。我们这里暂且还保留有这个角色。</p><h2 id="性能测试需要注意的点" tabindex="-1"><a class="header-anchor" href="#性能测试需要注意的点"><span>性能测试需要注意的点</span></a></h2><p>几乎没有文章在讲性能测试的时候提到这个问题，大家都会讲如何去性能测试，有哪些性能测试指标这些东西。</p><h3 id="了解系统的业务场景" tabindex="-1"><a class="header-anchor" href="#了解系统的业务场景"><span>了解系统的业务场景</span></a></h3><p><strong>性能测试之前更需要你了解当前的系统的业务场景。</strong> 对系统业务了解的不够深刻，我们很容易犯测试方向偏执的错误，从而导致我们忽略了对系统某些更需要性能测试的地方进行测试。比如我们的系统可以为用户提供发送邮件的功能，用户配置成功邮箱后只需输入相应的邮箱之后就能发送，系统每天大概能处理上万次发邮件的请求。很多人看到这个可能就直接开始使用相关工具测试邮箱发送接口，但是，发送邮件这个场景可能不是当前系统的性能瓶颈，这么多人用我们的系统发邮件， 还可能有很多人一起发邮件，单单这个场景就这么人用，那用户管理可能才是性能瓶颈吧！</p><h3 id="历史数据非常有用" tabindex="-1"><a class="header-anchor" href="#历史数据非常有用"><span>历史数据非常有用</span></a></h3><p>当前系统所留下的历史数据非常重要，一般情况下，我们可以通过相应的些历史数据初步判定这个系统哪些接口调用的比较多、哪些服务承受的压力最大，这样的话，我们就可以针对这些地方进行更细致的性能测试与分析。</p><p>另外，这些地方也就像这个系统的一个短板一样，优化好了这些地方会为我们的系统带来质的提升。</p><h2 id="常见性能指标" tabindex="-1"><a class="header-anchor" href="#常见性能指标"><span>常见性能指标</span></a></h2><h3 id="响应时间" tabindex="-1"><a class="header-anchor" href="#响应时间"><span>响应时间</span></a></h3><p><strong>响应时间 RT(Response-time)就是用户发出请求到用户收到系统处理结果所需要的时间。</strong></p><p>RT 是一个非常重要且直观的指标，RT 数值大小直接反应了系统处理用户请求速度的快慢。</p><h3 id="并发数" tabindex="-1"><a class="header-anchor" href="#并发数"><span>并发数</span></a></h3><p><strong>并发数可以简单理解为系统能够同时供多少人访问使用也就是说系统同时能处理的请求数量。</strong></p><p>并发数反应了系统的负载能力。</p><h3 id="qps-和-tps" tabindex="-1"><a class="header-anchor" href="#qps-和-tps"><span>QPS 和 TPS</span></a></h3><ul><li><strong>QPS（Query Per Second）</strong> ：服务器每秒可以执行的查询次数；</li><li><strong>TPS（Transaction Per Second）</strong> ：服务器每秒处理的事务数（这里的一个事务可以理解为客户发出请求到收到服务器的过程）；</li></ul><p>书中是这样描述 QPS 和 TPS 的区别的。</p><blockquote><p>QPS vs TPS：QPS 基本类似于 TPS，但是不同的是，对于一个页面的一次访问，形成一个 TPS；但一次页面请求，可能产生多次对服务器的请求，服务器对这些请求，就可计入“QPS”之中。如，访问一个页面会请求服务器 2 次，一次访问，产生一个“T”，产生 2 个“Q”。</p></blockquote><h3 id="吞吐量" tabindex="-1"><a class="header-anchor" href="#吞吐量"><span>吞吐量</span></a></h3><p><strong>吞吐量指的是系统单位时间内系统处理的请求数量。</strong></p><p>一个系统的吞吐量与请求对系统的资源消耗等紧密关联。请求对系统资源消耗越多，系统吞吐能力越低，反之则越高。</p><p>TPS、QPS 都是吞吐量的常用量化指标。</p><ul><li><strong>QPS（TPS）</strong> = 并发数/平均响应时间(RT)</li><li><strong>并发数</strong> = QPS * 平均响应时间(RT)</li></ul><h2 id="系统活跃度指标" tabindex="-1"><a class="header-anchor" href="#系统活跃度指标"><span>系统活跃度指标</span></a></h2><h3 id="pv-page-view" tabindex="-1"><a class="header-anchor" href="#pv-page-view"><span>PV(Page View)</span></a></h3><p>访问量, 即页面浏览量或点击量，衡量网站用户访问的网页数量；在一定统计周期内用户每打开或刷新一个页面就记录 1 次，多次打开或刷新同一页面则浏览量累计。UV 从网页打开的数量/刷新的次数的角度来统计的。</p><h3 id="uv-unique-visitor" tabindex="-1"><a class="header-anchor" href="#uv-unique-visitor"><span>UV(Unique Visitor)</span></a></h3><p>独立访客，统计 1 天内访问某站点的用户数。1 天内相同访客多次访问网站，只计算为 1 个独立访客。UV 是从用户个体的角度来统计的。</p><h3 id="dau-daily-active-user" tabindex="-1"><a class="header-anchor" href="#dau-daily-active-user"><span>DAU(Daily Active User)</span></a></h3><p>日活跃用户数量。</p><h3 id="mau-monthly-active-users" tabindex="-1"><a class="header-anchor" href="#mau-monthly-active-users"><span>MAU(monthly active users)</span></a></h3><p>月活跃用户人数。</p><p>举例：某网站 DAU 为 1200w， 用户日均使用时长 1 小时，RT 为 0.5s，求并发量和 QPS。</p><p>平均并发量 = DAU（1200w）* 日均使用时长（1 小时，3600 秒） /一天的秒数（86400）=1200w/24 = 50w</p><p>真实并发量（考虑到某些时间段使用人数比较少） = DAU（1200w）* 日均使用时长（1 小时，3600 秒） /一天的秒数-访问量比较小的时间段假设为 8 小时（57600）=1200w/16 = 75w</p><p>峰值并发量 = 平均并发量 * 6 = 300w</p><p>QPS = 真实并发量/RT = 75W/0.5=150w/s</p><h2 id="性能测试分类" tabindex="-1"><a class="header-anchor" href="#性能测试分类"><span>性能测试分类</span></a></h2><h3 id="性能测试" tabindex="-1"><a class="header-anchor" href="#性能测试"><span>性能测试</span></a></h3><p>性能测试方法是通过测试工具模拟用户请求系统，目的主要是为了测试系统的性能是否满足要求。通俗地说，这种方法就是要在特定的运行条件下验证系统的能力状态。</p><p>性能测试是你在对系统性能已经有了解的前提之后进行的，并且有明确的性能指标。</p><h3 id="负载测试" tabindex="-1"><a class="header-anchor" href="#负载测试"><span>负载测试</span></a></h3><p>对被测试的系统继续加大请求压力，直到服务器的某个资源已经达到饱和了，比如系统的缓存已经不够用了或者系统的响应时间已经不满足要求了。</p><p>负载测试说白点就是测试系统的上限。</p><h3 id="压力测试" tabindex="-1"><a class="header-anchor" href="#压力测试"><span>压力测试</span></a></h3><p>不去管系统资源的使用情况，对系统继续加大请求压力，直到服务器崩溃无法再继续提供服务。</p><h3 id="稳定性测试" tabindex="-1"><a class="header-anchor" href="#稳定性测试"><span>稳定性测试</span></a></h3><p>模拟真实场景，给系统一定压力，看看业务是否能稳定运行。</p><h2 id="常用性能测试工具" tabindex="-1"><a class="header-anchor" href="#常用性能测试工具"><span>常用性能测试工具</span></a></h2><h3 id="后端常用" tabindex="-1"><a class="header-anchor" href="#后端常用"><span>后端常用</span></a></h3><p>既然系统设计涉及到系统性能方面的问题，那在面试的时候，面试官就很可能会问：<strong>你是如何进行性能测试的？</strong></p><p>推荐 4 个比较常用的性能测试工具：</p><ol><li><strong>Jmeter</strong> ：Apache JMeter 是 JAVA 开发的性能测试工具。</li><li><strong>LoadRunner</strong>：一款商业的性能测试工具。</li><li><strong>Galtling</strong> ：一款基于 Scala 开发的高性能服务器性能测试工具。</li><li><strong>ab</strong> ：全称为 Apache Bench 。Apache 旗下的一款测试工具，非常实用。</li></ol><p>没记错的话，除了 <strong>LoadRunner</strong> 其他几款性能测试工具都是开源免费的。</p><h3 id="前端常用" tabindex="-1"><a class="header-anchor" href="#前端常用"><span>前端常用</span></a></h3><ol><li><strong>Fiddler</strong>：抓包工具，它可以修改请求的数据，甚至可以修改服务器返回的数据，功能非常强大，是 Web 调试的利器。</li><li><strong>HttpWatch</strong>: 可用于录制 HTTP 请求信息的工具。</li></ol><h2 id="常见的性能优化策略" tabindex="-1"><a class="header-anchor" href="#常见的性能优化策略"><span>常见的性能优化策略</span></a></h2><p>性能优化之前我们需要对请求经历的各个环节进行分析，排查出可能出现性能瓶颈的地方，定位问题。</p><p>下面是一些性能优化时，我经常拿来自问的一些问题：</p><ol><li>系统是否需要缓存？</li><li>系统架构本身是不是就有问题？</li><li>系统是否存在死锁的地方？</li><li>系统是否存在内存泄漏？（Java 的自动回收内存虽然很方便，但是，有时候代码写的不好真的会造成内存泄漏）</li><li>数据库索引使用是否合理？</li><li>……</li></ol><p><img src="https://oss.javaguide.cn/github/javaguide/gongzhonghaoxuanchuan.png" alt="JavaGuide 官方公众号"></p>',76)]))}const o=a(t,[["render",s],["__file","performance-test.html.vue"]]),c=JSON.parse('{"path":"/high-availability/performance-test.html","title":"性能测试入门","lang":"zh-CN","frontmatter":{"title":"性能测试入门","category":"高可用","icon":"et-performance","description":"性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？了解性能测试的指标、分类以及工具等知识有助于我们更好地去写出性能更好的程序，另外作为开发这个角色，如果你会性能测试的话，相信也会为你的履历加分不少。 这篇文章是我会结合自己的实际经历以及在测试这里取的经所得，除此之外，我还借鉴了一些优秀书籍，希望对你有帮助。 不同角色看网站性能 ...","head":[["meta",{"property":"og:url","content":"https://javaguide.cn/high-availability/performance-test.html"}],["meta",{"property":"og:site_name","content":"JavaGuide"}],["meta",{"property":"og:title","content":"性能测试入门"}],["meta",{"property":"og:description","content":"性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？了解性能测试的指标、分类以及工具等知识有助于我们更好地去写出性能更好的程序，另外作为开发这个角色，如果你会性能测试的话，相信也会为你的履历加分不少。 这篇文章是我会结合自己的实际经历以及在测试这里取的经所得，除此之外，我还借鉴了一些优秀书籍，希望对你有帮助。 不同角色看网站性能 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-06-22T03:42:59.000Z"}],["meta",{"property":"article:modified_time","content":"2025-06-22T03:42:59.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"性能测试入门\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-06-22T03:42:59.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Guide\\",\\"url\\":\\"https://javaguide.cn/article/\\"}]}"]]},"headers":[{"level":2,"title":"不同角色看网站性能","slug":"不同角色看网站性能","link":"#不同角色看网站性能","children":[{"level":3,"title":"用户","slug":"用户","link":"#用户","children":[]},{"level":3,"title":"开发人员","slug":"开发人员","link":"#开发人员","children":[]},{"level":3,"title":"测试人员","slug":"测试人员","link":"#测试人员","children":[]},{"level":3,"title":"运维人员","slug":"运维人员","link":"#运维人员","children":[]}]},{"level":2,"title":"性能测试需要注意的点","slug":"性能测试需要注意的点","link":"#性能测试需要注意的点","children":[{"level":3,"title":"了解系统的业务场景","slug":"了解系统的业务场景","link":"#了解系统的业务场景","children":[]},{"level":3,"title":"历史数据非常有用","slug":"历史数据非常有用","link":"#历史数据非常有用","children":[]}]},{"level":2,"title":"常见性能指标","slug":"常见性能指标","link":"#常见性能指标","children":[{"level":3,"title":"响应时间","slug":"响应时间","link":"#响应时间","children":[]},{"level":3,"title":"并发数","slug":"并发数","link":"#并发数","children":[]},{"level":3,"title":"QPS 和 TPS","slug":"qps-和-tps","link":"#qps-和-tps","children":[]},{"level":3,"title":"吞吐量","slug":"吞吐量","link":"#吞吐量","children":[]}]},{"level":2,"title":"系统活跃度指标","slug":"系统活跃度指标","link":"#系统活跃度指标","children":[{"level":3,"title":"PV(Page View)","slug":"pv-page-view","link":"#pv-page-view","children":[]},{"level":3,"title":"UV(Unique Visitor)","slug":"uv-unique-visitor","link":"#uv-unique-visitor","children":[]},{"level":3,"title":"DAU(Daily Active User)","slug":"dau-daily-active-user","link":"#dau-daily-active-user","children":[]},{"level":3,"title":"MAU(monthly active users)","slug":"mau-monthly-active-users","link":"#mau-monthly-active-users","children":[]}]},{"level":2,"title":"性能测试分类","slug":"性能测试分类","link":"#性能测试分类","children":[{"level":3,"title":"性能测试","slug":"性能测试","link":"#性能测试","children":[]},{"level":3,"title":"负载测试","slug":"负载测试","link":"#负载测试","children":[]},{"level":3,"title":"压力测试","slug":"压力测试","link":"#压力测试","children":[]},{"level":3,"title":"稳定性测试","slug":"稳定性测试","link":"#稳定性测试","children":[]}]},{"level":2,"title":"常用性能测试工具","slug":"常用性能测试工具","link":"#常用性能测试工具","children":[{"level":3,"title":"后端常用","slug":"后端常用","link":"#后端常用","children":[]},{"level":3,"title":"前端常用","slug":"前端常用","link":"#前端常用","children":[]}]},{"level":2,"title":"常见的性能优化策略","slug":"常见的性能优化策略","link":"#常见的性能优化策略","children":[]}],"git":{"createdTime":1750563779000,"updatedTime":1750563779000,"contributors":[{"name":"DanlionYou","username":"DanlionYou","email":"3184877618.com","commits":1,"url":"https://github.com/DanlionYou"}]},"readingTime":{"minutes":8.4,"words":2519},"filePathRelative":"high-availability/performance-test.md","localizedDate":"2025年6月22日","excerpt":"<p>性能测试一般情况下都是由测试这个职位去做的，那还需要我们开发学这个干嘛呢？了解性能测试的指标、分类以及工具等知识有助于我们更好地去写出性能更好的程序，另外作为开发这个角色，如果你会性能测试的话，相信也会为你的履历加分不少。</p>\\n<p>这篇文章是我会结合自己的实际经历以及在测试这里取的经所得，除此之外，我还借鉴了一些优秀书籍，希望对你有帮助。</p>\\n<h2>不同角色看网站性能</h2>\\n<h3>用户</h3>\\n<p>当用户打开一个网站的时候，最关注的是什么？当然是网站响应速度的快慢。比如我们点击了淘宝的主页，淘宝需要多久将首页的内容呈现在我的面前，我点击了提交订单按钮需要多久返回结果等等。</p>","autoDesc":true}');export{o as comp,c as data};
